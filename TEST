import numpy as np
import struct
from MEC1315_STL import *


def centrer(v):
    v[:,0]=v[:,0]-(max(v[:,0])+min(v[:,0]))/2
    v[:,1]=v[:,1]-(max(v[:,1])+min(v[:,1]))/2
    v[:,2]=v[:,2]-(max(v[:,2])+min(v[:,2]))/2
    return v

def grandeur(x,y,z,v): #on doit le centrer avant
    v[:,0]=v[:,0]/(max(v[:,0])-min(v[:,0]))*x
    v[:,1]=v[:,1]/(max(v[:,1])-min(v[:,1]))*y
    v[:,2]=v[:,2]/(max(v[:,2])-min(v[:,2]))*z
    return v

def emplacement(x,y,z,v):
    v[:,0]=v[:,0]-(max(v[:,0])+min(v[:,0]))/2+x
    v[:,1]=v[:,1]-(max(v[:,1])+min(v[:,1]))/2+y
    v[:,2]=v[:,2]-(max(v[:,2])+min(v[:,2]))/2+z
    return v

#fonction fusion à créer
def Fusion(*args):
    l = len(args)
    
    for i in range(l):
        if i == 0:            
            f,v,n = args[i][0], args[i][1], args[i][2]
            nv = len(v)
        else:
            f2,v2,n2 = args[i][0], args[i][1], args[i][2]
            f = np.vstack((f,f2+nv))
            v = np.vstack((v,v2))
            n = np.vstack((n,n2))
            nv = len(v)
    return f,v,n

#--------------------------------------------------

moteur1=LireSTL('moteur1.stl')
moteur2=LireSTL('moteur2.stl')
moteur3=LireSTL('moteur3.stl')
moteur4=LireSTL('moteur4.stl')
moteur5=LireSTL('moteur5.stl')
moteur6=LireSTL('moteur6.stl')
moteur7=LireSTL('moteur7.stl')
moteur8=LireSTL('moteur8.stl')

f,v,n=Fusion(moteur1,moteur2,moteur3,moteur4,moteur5,moteur6,moteur7,moteur8)

moteur123 = Fusion(moteur1,moteur2,moteur2)

F,V,N = moteur123
V = V + [50,1,5]
moteur123[2] = V
moteur123 = F,V,N
#--------------------------------------------------
moteur12345 = Fusion(moteur123,moteur4,moteur5)
F1,V1,N1 = moteur12345

nom_ecrire="moteur_assemble.stl"
# EcrireSTLASCII(nom_ecrire,f,v,n)
#EcrireSTLASCII(nom_ecrire,F,V,N)
EcrireSTLASCII(nom_ecrire,F1,V1,N1)
